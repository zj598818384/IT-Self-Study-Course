<!--pages/demo02/demo02.wxml-->
<!--
    1.text相当于以前web中的span标签，行内元素，不会换行
    2.view标签相当于以前web中的div标签，块级元素，会换行
-->
<!-- <text>1</text>
<text>2</text>
<view>1</view>
<text class="" selectable="false" space="false" decode="false"></text> -->

<!-- 1 字符串 -->
<view>{{msg}}</view>
<!-- 2 数字类型 -->
<view>{{num}}</view>
<!-- 3 bool类型 -->
<view>是否为傻子：{{isGirl}}</view>
<!-- 4 object类型 -->
<view>{{person.age}}</view>
<view>{{person.sex}}</view>
<view>{{person.height}}</view>
<view>{{person.weight}}</view>
<!-- 5 自定义属性 -->
<view data-num="{{num}}">自定义属性</view>
<!-- 
    6 使用bool类型充当属性 checked 
       1 字符串和花括号之间一定不要存在空格
-->
<view>
    <checkbox checked="{{isCheck}}">
        苹果
    </checkbox>
</view>

<!-- 
    7 运算=>表达式
        1.可以在花括号中 加入 表达式——"语句"
        2.表达式
            指定是一些简单 运算 数字运算 字符串 拼接 逻辑运算...
            1 数字的加减
            2 字符串拼接
            3 三元表达式
        3.语句
            复杂的代码段
            1 if else
            2 switch
            3 do while
            4 for
 -->

 <view>数字的加减：{{1+1}}</view>
 <view>字符串的拼接：{{'1'+'1'}}</view>
 <view>三元表达式：{{10%2===0?'偶数':'奇数'}}</view>


<!--
    8 列表循环
        1.wx:for="{{数组或者对象}}" wx:for-item="循环项的名称" wx:for-index="循环的索引"     
        2.wx:key="唯一的值" 用来提高列表渲染的性能
            1 wx:key 绑定一个普通的字符串的时候 那么这个字符串名称 肯定是 循环数组 中的对象的唯一属性
            2 wx:key="*this" 就表示你的数组是一个普通的数组 *this表示时循环项
            [1,2,3,4,5]   ["1","2","abc"]
        3.当出现数组的嵌套循环的时候尤其要注意一下绑定的名称不要重名
          wx:for-item="item" wx:for-index="index"
        4.默认情况下我们不懈
          wx:for-item="item" wx:for-index="index"
          小程序也会把循环项的名称和索引的名称item和index
          只有一层循环的话(wx:for-item="item" wx:for-index="index")可以省略不写
    
    9 对象循环
        1.wx:for="{{对象}}" wx:for-item="对象的值" wx:for-index="对象的属性"
        2.循环对象的时候最好把item和index的名称都修改一下
          wx:for-item="value" wx:for-index="key"
-->
<view>
    <view>列表循环</view>
    <view wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="id">
        索引{{index}}
        :
        值{{item.name}}
    </view>
</view>

<view>
    <view>对象循环</view>
    <view wx:for="{{person}}" wx:for-item="value" wx:for-index="key" wx:key="age">
        属性{{key}}：
        值{{value}}
    </view>
</view>

<!-- 10 block标签 -->
<view>
    <view>block标签</view>
    <block wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="id">
        索引{{index}}
        :
        值{{item.name}}
    </block>
</view>

<!-- 
    11 条件渲染 
        1 wx:if={{true/false}}
            2 if ,else if ,else
            wx:if
            wx:elif
            ex:else：不需要表达式
        2 hidden
            hidden="{{true}}"：隐藏
            hidden="{{false}}"：显示
        3 什么场景下使用哪一个
            1 当标签不是频繁的切换显示 优先使用wx:if
                	直接把标签从页面结构给移除掉
            2 当标签频繁的切换显示的时候 优先使用hidden
                	通过添加样式的方式来切换显示
                hidden 属性不要和样式display一起使用，因为display属性覆盖了hidden属性


-->

<view>
    <view>条件渲染</view>
    <view wx:if="{{true}}">显示</view>
    <view wx:if="{{flase}}">隐藏</view>

    <view wx:if="{{false}}">1</view>
    <view wx:elif="{{false}}">2</view>
    <view wx:else>3</view>

    <view>-----hidden------</view>
    <view hidden="{{flase}}">hidden</view>

    <view>-----wx:if hidden------</view>
    <view wx:if="{{flase}}">wx:if：从页面移除</view>
    <view hidden style="display:flex">hidden：通过样式添加</view>
</view>
