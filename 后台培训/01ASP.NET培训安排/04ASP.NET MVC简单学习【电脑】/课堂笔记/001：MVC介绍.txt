一、什么是MVC？
MVC是软件工程中的一种软件架构模式，即所有的输入、输出、逻辑控制，都要由软件开发者完成实现。
(1)控制器(Controller)：接受用户输入，并完成模型、视图的调用
(2)视图(View)：为用户展示结果，将处理结果进行展示
(3)模型(Model)：业务逻辑处理，对输入信息进行加工处理，得到一个结果

二、三层模式
是软件工程中的程序设计模式，是MVC设计思想的一种实现，现在将MVC模式等同于三层模式

四、三层模式包括：UI层，业务逻辑层，数据访问层，模型层

五、MVC中的model表示的是数据模型，而三层里面的model是显示模型 

六、asp.net就是属于UI层的，这是一款对输入、输出进行分离的UI层框架

七、MVC的最初的处理
用户通过(请求Routing(路由))controller控制器进行输入，调用model层，然后再到model层对输入信息进行逻辑处理和加工，得到一个结果，执行完毕之后，返回到controller控制器中，然后controller控制器再调用view层，将信息进行处理，结果在进行展示

八、三层开发
UI层通过调用BLL层，BLL层调用DAL层(不用调用则直接返回)然后在依次放回到UI层中

九、微软提出的MVC
对UI层进行的划分，划分为controller控制器、model层模型和view层视图层

十、三层中的model和MVC中的model层的区别：
三层中的model：只要数据库中有一张表，model层中就有一个类，并且类中的属性必须严格和表中的字段一一对应的，属于数据模型，和数据库中的表对应

MVC中的model：一般被称为显示模型，主要就是将一个数据进行展示的时候，不是跟表中的数据类型进行对应的，这个时候就要在这里进行进一步的封装，和我要显示的内容对应的

例：比如说现在有一张图书信息表和一张图书分类表，在两张表中我要显示一个表格出来，这个表格中既有图书名称又有图书的分类名称，本身没有图书名称和分类名称的这张表存放这些信息，这个时候我就需要用到model显示模型，主要用于显示

如果一样的话，则一般我们都直接省略显示模型，直接使用数据模型



总结：MVC主要就是分工合作
最早的MVC就是为了让不同的人员分工开发
三层就只是沿用了MVC的思想：人员分工

MVC是软件架构层别的
三层是软件工程当中的一个功能模块的划分

MVC的路由映射到某个action中


